<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>0xGame misc复现</title>
      <link href="/2024/12/06/0xGame-misc%E5%A4%8D%E7%8E%B0/"/>
      <url>/2024/12/06/0xGame-misc%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客折腾记</title>
      <link href="/2024/12/05/hello-world/"/>
      <url>/2024/12/05/hello-world/</url>
      
        <content type="html"><![CDATA[<p>关于搭建博客的一些杂谈</p><p>以此文章来记录我搭建博客的全过程</p><p>首先，特别鸣谢为我搭建博客提供指导的 hicancan，yolo，seandictionary与st4rr ！！！</p><h1 id="搭建的原因"><a href="#搭建的原因" class="headerlink" title="搭建的原因"></a>搭建的原因</h1><p>至于为什么要搭建这个博客，其实是有”跟风”的成分在，看到周围认识的一些厉害的大佬们都搭建了自己的博客，而且非常的美观，于是我也有了搭建一个属于自己的博客的想法。但是更多的是想把自己写的一些笔记，一些文章放到网站上，这样可以随时查阅，写的wp也方便互相交流讨论。</p><h1 id="搭建的步骤"><a href="#搭建的步骤" class="headerlink" title="搭建的步骤"></a>搭建的步骤</h1><p>1.我先买了一个域名，也就是现在的Z41sArrebol.top，紧接着放到DNS解析，然后与github page进行绑定</p><p>2.接着就是最基本的，用git和nodejs来搭建hexo的框架，这个倒是很简单，包括申请github的账号，绑定ssh之类。</p><p>3.执行简单的一些npm和hexo命令，参考了很多的博客</p><p>4.修改主题文件，完成博客基本个性化设置（yysy这一步是最浪费时间的）</p><p>5.通过引入css文件魔改博客，更换主题，美化</p><p>6.把更改好的个性化主题部署到github page即可</p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><p>看似说的云淡风轻，但实则耗费了我大量的时间，真的很羡慕那些一两天天就能搭起来的大佬qaq</p><h2 id="问题一：DNS解析出问题，无法正常绑定github-page"><a href="#问题一：DNS解析出问题，无法正常绑定github-page" class="headerlink" title="问题一：DNS解析出问题，无法正常绑定github page"></a>问题一：DNS解析出问题，无法正常绑定github page</h2><p>解决方法：阿里云内部解决，把域名经过实名认证即可正常解析，绑定（还好没用腾讯云，因为腾讯云的实名认证必须成年）</p><h2 id="问题二：git端口出现问题"><a href="#问题二：git端口出现问题" class="headerlink" title="问题二：git端口出现问题"></a>问题二：git端口出现问题</h2><p>（ssh: connect to host localhost port 22: Connection refused）</p><p>这个是一开始还没开始配置主题文件的时候出现的问题，正常的拉取包都会报错</p><p>解决方法：直接把错误信息扔到Google上面搜索，果然有类似的博客，把原本的端口用命令改了一下就可以了</p><h2 id="问题三：css文件引入出问题"><a href="#问题三：css文件引入出问题" class="headerlink" title="问题三：css文件引入出问题"></a>问题三：css文件引入出问题</h2><p>搭好了基本框架之后，我想美化一下自己的博客，于是开始修改主题的配置文件，比如深色模式，背景图片设置之类的基础设置。但是随着“魔改”的深入，我发现高级的配置都是要加css文件和js文件的，然后在主题文件的inject项中进行引入，但是在添加了这些文件之后我的博客并没有发生变化，换句话说，我做的设置都没有生效。</p><p>（其实我也不需要很花里胡哨的设置，但是把卡片设置透明度这一项在我看来是必须的）</p><p>实在无果我就重新把hexo装了一遍，还是无济于事，最后经过大量的搜索我终于发现了问题！</p><p>一开始我是在主题文件的css文件夹中引入css文件，因为他默认是有css文件夹的，但其实是要在根目录的source文件夹里面添加css文件夹，然后再把css文件放到里面，这样才会生效，默认的source文件夹下是没有css文件夹的，让我一直在死胡同里面绕圈））</p><h2 id="问题四：写markdown上传图片效率过低问题"><a href="#问题四：写markdown上传图片效率过低问题" class="headerlink" title="问题四：写markdown上传图片效率过低问题"></a>问题四：写markdown上传图片效率过低问题</h2><p>解决方案：使用github图床可以快速的上传图片，而不需要像我之前一张一张的引用一张一张的重命名了哈哈哈，虽然现在还没有彻底弄好，但是还是感谢yolo，为我提供了写markdown文件的新思路！！</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这次配置博客大体上算是成功了，看着自己搭起来的博客，非常有成就感。</p><p>但是博客仍然有很多不足，比如评论系统还没有成功搭建，写markdown上传图片效率过低，没有应用图床等问题，后续慢慢折腾慢慢弄吧，人生就是要不断奋斗的（笑）</p>]]></content>
      
      
      <categories>
          
          <category> 一些杂谈 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂谈 </tag>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2024 WuCup CTF wp</title>
      <link href="/2024/12/02/WuCup%20CTF/"/>
      <url>/2024/12/02/WuCup%20CTF/</url>
      
        <content type="html"><![CDATA[<p>0xGame作为笔者的启蒙赛事，笔者从中学习到了一些CTF的基本知识</p><p>而WuCup则是笔者第一个独立参加的网络赛事</p><p>虽然只做出来四道题，但是99%的步骤都是本人完成))</p><p>恰逢笔者的博客基本搭建完成，所以兴奋的把本来用PDF提交的wp转成.md格式扔到这里</p><h1 id="Web-Sign"><a href="#Web-Sign" class="headerlink" title="Web-Sign"></a>Web-Sign</h1><p>开启题目环境后，使用webshell工具中国蚁剑连接</p><p>题目环境已经告知密码passwd为sgin</p><p><img src="/img/WuCup/WuCup1.png"></p><p>连接后打开最上层的目录，在最底下发现flag的文件夹</p><p><img src="/img/WuCup/WuCup2.png"><br><img src="/img/WuCup/WuCup3.png"></p><p>WuCup{253e7c29-a436-4f17-bce2-72ce13731ba3}</p><h1 id="Crypto-easy"><a href="#Crypto-easy" class="headerlink" title="Crypto-easy"></a>Crypto-easy</h1><p>观察应该是RC4加密，直接扔kimi写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">key = <span class="string">&quot;hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化s和t数组</span></span><br><span class="line">s = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">j = <span class="number">0</span></span><br><span class="line">t = [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> key] * (<span class="number">256</span> // <span class="built_in">len</span>(key)) + [<span class="built_in">ord</span>(c) <span class="keyword">for</span> c <span class="keyword">in</span> key][:(<span class="number">256</span> % <span class="built_in">len</span>(key))]</span><br><span class="line"></span><br><span class="line"><span class="comment"># RC4算法生成密钥流</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">    j = (j + s[i] + t[i]) % <span class="number">256</span></span><br><span class="line">    s[i], s[j] = s[j], s[i]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于解密的索引</span></span><br><span class="line">i = j = <span class="number">0</span></span><br><span class="line">flag_encrypted = [</span><br><span class="line">    <span class="number">0xd8</span>, <span class="number">0xd2</span>, <span class="number">0x96</span>, <span class="number">0x3e</span>, <span class="number">0x0d</span>, <span class="number">0x8a</span>, <span class="number">0xb8</span>, <span class="number">0x53</span>, <span class="number">0x3d</span>, <span class="number">0x2a</span>, <span class="number">0x7f</span>, <span class="number">0xe2</span>, <span class="number">0x96</span>, <span class="number">0xc5</span>, <span class="number">0x29</span>, <span class="number">0x23</span>,</span><br><span class="line">    <span class="number">0x39</span>, <span class="number">0x24</span>, <span class="number">0x6e</span>, <span class="number">0xba</span>, <span class="number">0x0d</span>, <span class="number">0x29</span>, <span class="number">0x2d</span>, <span class="number">0x57</span>, <span class="number">0x52</span>, <span class="number">0x57</span>, <span class="number">0x83</span>, <span class="number">0x59</span>, <span class="number">0x32</span>, <span class="number">0x2c</span>, <span class="number">0x3a</span>, <span class="number">0x77</span>,</span><br><span class="line">    <span class="number">0x89</span>, <span class="number">0x2d</span>, <span class="number">0xfa</span>, <span class="number">0x72</span>, <span class="number">0x61</span>, <span class="number">0xb8</span>, <span class="number">0x4f</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解密flag</span></span><br><span class="line">flag_decrypted = []</span><br><span class="line"><span class="keyword">for</span> byte <span class="keyword">in</span> flag_encrypted:</span><br><span class="line">    i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">    j = (j + s[i]) % <span class="number">256</span></span><br><span class="line">    s[i], s[j] = s[j], s[i]</span><br><span class="line">    x = (s[i] + s[j]) % <span class="number">256</span></span><br><span class="line">    flag_decrypted.append(byte ^ s[x])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将解密后的bytes转换为字符串</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">chr</span>(b) <span class="keyword">for</span> b <span class="keyword">in</span> flag_decrypted)</span><br><span class="line"><span class="built_in">print</span>(flag)</span><br></pre></td></tr></table></figure><p>最后扔到编译器运行就行</p><p><img src="/img/WuCup/WuCup4.png"></p><p>WuCup{55a0a84f86a6ad40006f014619577ad3}</p><h1 id="Misc-原神启动"><a href="#Misc-原神启动" class="headerlink" title="Misc-原神启动"></a>Misc-原神启动</h1><p>打开压缩包之后只有一张图片和一个加密的word文档</p><p>Winhex打开发现就是正常的png文件，考虑其他隐写方式</p><p>扔到stegsolve里面看看</p><p><img src="/img/WuCup/WuCup5.png"></p><p>很清楚的打开了第一层加密，里面是一个word文档，打开后只有 原神启动！这几个字</p><p>网上搜索，改成.zip格式再进行分析</p><p>分析压缩包，发现在word&#x2F;media目录下有一个image1.png图片，打开很容易发现一行字</p><p><img src="/img/WuCup/WuCup6.png"></p><p>为了更清楚一点，还是扔到stegsolve进行处理</p><p><img src="/img/WuCup/WuCup7.png"></p><p>此为第二层加密</p><p>打开后，发现还有一个被加密的txt文件，因为没有发现其他线索，优先考虑伪加密</p><p>扔到winhex里面，发现只是正常的加密</p><p>故重新返回目录.xml文件进行寻找</p><p>考虑到一二层的密码都为WuCup{ }格式，猜想第三层密码也相同，但在所有文件搜索WuCup都没有结果</p><p>于是缩小范围，搜索Wu和”{“，最终在document.xml中发现了线索（标蓝色的）</p><p><img src="/img/WuCup/WuCup8.png"></p><p>仔细往后看不难发现所有的元素组合起来即为一个标准的flag格式（如下图）</p><p><img src="/img/WuCup/WuCup9.png"></p><p>（此处换了个编辑器，显示的会更明显）</p><p>组合起来可得到第三层密码：WuCup{f848566c-3fb6-4bfd-805a-d9e102511784}</p><p>输入密码得到txt文件</p><p><img src="/img/WuCup/WuCup10.png"></p><p>WuCup{0e49b776-b732-4242-b91c-8c513a1f12ce}</p><h1 id="Misc-Sign"><a href="#Misc-Sign" class="headerlink" title="Misc-Sign"></a>Misc-Sign</h1><p>签到题，十六进制的字符串，扔cyberchef里面直接出</p><p><img src="/img/WuCup/WuCup11.png"></p><p>WuCup{df357d47-31cb-42a8-aa0c-6430634ddf4a}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> WuCup </tag>
            
            <tag> wp </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
